version: '3.8'

services:
  # Proposers
  proposer-1:
    build:
      context: ./proposer
      dockerfile: Dockerfile
    environment:
      - NODE_ID=1
      - NODE_ROLE=proposer
      - QUORUM_SIZE=3
    volumes:
      - proposer_1_data:/app/data
    ports:
      - "8081:8080"
    networks:
      - paxos_network
  
  proposer-2:
    build:
      context: ./proposer
      dockerfile: Dockerfile
    environment:
      - NODE_ID=2
      - NODE_ROLE=proposer
      - QUORUM_SIZE=3
    volumes:
      - proposer_2_data:/app/data
    ports:
      - "8082:8080"
    networks:
      - paxos_network

  proposer-3:
    build:
      context: ./proposer
      dockerfile: Dockerfile
    environment:
      - NODE_ID=3
      - NODE_ROLE=proposer
      - QUORUM_SIZE=3
    volumes:
      - proposer_3_data:/app/data
    ports:
      - "8083:8080"
    networks:
      - paxos_network
      
  proposer-4:
    build:
      context: ./proposer
      dockerfile: Dockerfile
    environment:
      - NODE_ID=4
      - NODE_ROLE=proposer
      - QUORUM_SIZE=3
    volumes:
      - proposer_4_data:/app/data
    ports:
      - "8084:8080"
    networks:
      - paxos_network
      
  proposer-5:
    build:
      context: ./proposer
      dockerfile: Dockerfile
    environment:
      - NODE_ID=5
      - NODE_ROLE=proposer
      - QUORUM_SIZE=3
    volumes:
      - proposer_5_data:/app/data
    ports:
      - "8085:8080"
    networks:
      - paxos_network
  
  # Acceptors
  acceptor-1:
    build:
      context: ./acceptor
      dockerfile: Dockerfile
    environment:
      - NODE_ID=1
      - NODE_ROLE=acceptor
    volumes:
      - acceptor_1_data:/app/data
    networks:
      - paxos_network
  
  acceptor-2:
    build:
      context: ./acceptor
      dockerfile: Dockerfile
    environment:
      - NODE_ID=2
      - NODE_ROLE=acceptor
    volumes:
      - acceptor_2_data:/app/data
    networks:
      - paxos_network
  
  acceptor-3:
    build:
      context: ./acceptor
      dockerfile: Dockerfile
    environment:
      - NODE_ID=3
      - NODE_ROLE=acceptor
    volumes:
      - acceptor_3_data:/app/data
    networks:
      - paxos_network
      
  acceptor-4:
    build:
      context: ./acceptor
      dockerfile: Dockerfile
    environment:
      - NODE_ID=4
      - NODE_ROLE=acceptor
    volumes:
      - acceptor_4_data:/app/data
    networks:
      - paxos_network
      
  acceptor-5:
    build:
      context: ./acceptor
      dockerfile: Dockerfile
    environment:
      - NODE_ID=5
      - NODE_ROLE=acceptor
    volumes:
      - acceptor_5_data:/app/data
    networks:
      - paxos_network
  
  # Learners
  learner-1:
    build:
      context: ./learner
      dockerfile: Dockerfile
    environment:
      - NODE_ID=1
      - NODE_ROLE=learner
    volumes:
      - learner_1_data:/app/data
    ports:
      - "8091:8080"
    networks:
      - paxos_network
  
  learner-2:
    build:
      context: ./learner
      dockerfile: Dockerfile
    environment:
      - NODE_ID=2
      - NODE_ROLE=learner
    volumes:
      - learner_2_data:/app/data
    ports:
      - "8092:8080"
    networks:
      - paxos_network

  # Store (Cluster Store)
  store-1:
    build:
      context: ./store
      dockerfile: Dockerfile
    environment:
      - NODE_ID=1
      - NODE_ROLE=store
    volumes:
      - store_1_data:/app/data
      - store_1_resource:/app/resource
    ports:
      - "8101:8080"
    networks:
      - paxos_network

  store-2:
    build:
      context: ./store
      dockerfile: Dockerfile
    environment:
      - NODE_ID=2
      - NODE_ROLE=store
    volumes:
      - store_2_data:/app/data
      - store_2_resource:/app/resource
    ports:
      - "8102:8080"
    networks:
      - paxos_network

  store-3:
    build:
      context: ./store
      dockerfile: Dockerfile
    environment:
      - NODE_ID=3
      - NODE_ROLE=store
    volumes:
      - store_3_data:/app/data
      - store_3_resource:/app/resource
    ports:
      - "8103:8080"
    networks:
      - paxos_network
  
  # Web UI
  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - paxos_network
    depends_on:
      - proposer-1
      - proposer-2
      - proposer-3
      - proposer-4
      - proposer-5
      - learner-1
      - learner-2
      - store-1
      - store-2
      - store-3
  
  # Monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - paxos_network
  
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - paxos_network
    depends_on:
      - prometheus

  # Node exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - paxos_network
    restart: unless-stopped

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - paxos_network
    restart: unless-stopped

volumes:
  proposer_1_data:
  proposer_2_data:
  proposer_3_data:
  proposer_4_data:
  proposer_5_data:
  acceptor_1_data:
  acceptor_2_data:
  acceptor_3_data:
  acceptor_4_data:
  acceptor_5_data:
  learner_1_data:
  learner_2_data:
  store_1_data:
  store_2_data:
  store_3_data:
  store_1_resource:
  store_2_resource:
  store_3_resource:
  prometheus_data:
  grafana_data:

networks:
  paxos_network:
    driver: bridge